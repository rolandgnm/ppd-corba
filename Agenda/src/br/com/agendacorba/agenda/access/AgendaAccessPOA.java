package br.com.agendacorba.agenda.access;


/**
* br/com/agendacorba/agenda/access/AgendaAccessPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Agenda.idl
* Monday, September 19, 2016 11:31:05 PM BRT
*/

public abstract class AgendaAccessPOA extends org.omg.PortableServer.Servant
 implements br.com.agendacorba.agenda.access.AgendaAccessOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("create", new java.lang.Integer (0));
    _methods.put ("getByName", new java.lang.Integer (1));
    _methods.put ("getAll", new java.lang.Integer (2));
    _methods.put ("update", new java.lang.Integer (3));
    _methods.put ("deleteByName", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // br/com/agendacorba/agenda/access/AgendaAccess/create
       {
         try {
           br.com.agendacorba.agenda.Contact created = br.com.agendacorba.agenda.ContactHelper.read (in);
           this.create (created);
           out = $rh.createReply();
         } catch (br.com.agendacorba.agenda.ContactAlreadyExistsException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.ContactAlreadyExistsExceptionHelper.write (out, $ex);
         } catch (br.com.agendacorba.agenda.MalformedTelNumberException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.MalformedTelNumberExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // br/com/agendacorba/agenda/access/AgendaAccess/getByName
       {
         try {
           String name = in.read_string ();
           br.com.agendacorba.agenda.Contact $result = null;
           $result = this.getByName (name);
           out = $rh.createReply();
           br.com.agendacorba.agenda.ContactHelper.write (out, $result);
         } catch (br.com.agendacorba.agenda.NoContactFoundException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.NoContactFoundExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // br/com/agendacorba/agenda/access/AgendaAccess/getAll
       {
         try {
           br.com.agendacorba.agenda.Contact $result[] = null;
           $result = this.getAll ();
           out = $rh.createReply();
           br.com.agendacorba.agenda.contactListHelper.write (out, $result);
         } catch (br.com.agendacorba.agenda.NoContactFoundException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.NoContactFoundExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // br/com/agendacorba/agenda/access/AgendaAccess/update
       {
         try {
           br.com.agendacorba.agenda.Contact contact = br.com.agendacorba.agenda.ContactHelper.read (in);
           this.update (contact);
           out = $rh.createReply();
         } catch (br.com.agendacorba.agenda.NoContactFoundException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.NoContactFoundExceptionHelper.write (out, $ex);
         } catch (br.com.agendacorba.agenda.MalformedTelNumberException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.MalformedTelNumberExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // br/com/agendacorba/agenda/access/AgendaAccess/deleteByName
       {
         try {
           String name = in.read_string ();
           this.deleteByName (name);
           out = $rh.createReply();
         } catch (br.com.agendacorba.agenda.NoContactFoundException $ex) {
           out = $rh.createExceptionReply ();
           br.com.agendacorba.agenda.NoContactFoundExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:br/com/agendacorba/agenda/access/AgendaAccess:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AgendaAccess _this() 
  {
    return AgendaAccessHelper.narrow(
    super._this_object());
  }

  public AgendaAccess _this(org.omg.CORBA.ORB orb) 
  {
    return AgendaAccessHelper.narrow(
    super._this_object(orb));
  }


} // class AgendaAccessPOA
