//Hierarquia para estabelecer corretamente os pacotes
module br {
 module com {
  module agendacorba {
    //package raiz
    module agenda {

        //Classe pra agrupar nome e telefone
        struct Contact{
            string name;
            string telNumber;
        };

        //especifica tipo pra passagem de lista
        typedef sequence<Contact> contactList;

        exception ContactAlreadyExistsException {
            string message;
            string name;
        };

        exception NoContactFoundException {
            string message;
        };

        exception MalformedTelNumberException {
            string telNumber;
        };

        //Camada de acesso Usuario->Servidor
        module access {

            interface AgendaAccess {
                void create(in Contact created) raises (ContactAlreadyExistsException, MalformedTelNumberException);

                Contact getByName(in string name) raises (NoContactFoundException);

                contactList getAll() raises (NoContactFoundException);

                void update(in Contact contact) raises (NoContactFoundException, MalformedTelNumberException);

                void deleteByName(in string name) raises (NoContactFoundException);
            };
        };

        //Camada de comunicacao entre servants
        module backbone {

            interface AgendaBackbone {
                void propagateCreate(in Contact newContact);

                contactList getAll();

                void propagateUpdate(in Contact updatedContact);

                void propagateDelete(in Contact deletedContact);

                void bindDuplexConnection(in string requesterName);
            };
        };
      };
     };
   };
 };